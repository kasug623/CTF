target = toAddr(0x808aeb0)
target_fn = getFunctionContaining(target) # <class 'ghidra.program.database.function.FunctionDB'>
main = getFunctionAt(toAddr(0x814c22c)) # <class 'ghidra.program.database.function.FunctionDB'>

def explore(start, end):
    explored = set()

    def _inner(cur, path):
        if cur == end:
            return path
        if cur in explored:
            return None
        explored.add(cur)

        xrefs = getReferencesTo(cur)
        for xref in xrefs:
            fn = getFunctionContaining(xref.getFromAddress())
            if fn is None:
                continue
            ret_path = _inner(fn.getEntryPoint(), path + [(fn, xref.getFromAddress())]) # add function and xref address
            if ret_path is not None:
                return ret_path
    return _inner(start, [])

rpath = explore(target_fn.getEntryPoint(), main.getEntryPoint())

for (fn, reach) in reversed(rpath):
    print("call : ", fn, "  reach : ", reach)